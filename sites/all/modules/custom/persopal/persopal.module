<?php


/*
 *
 */



function persopal_check_visibility($vocname) {

    global $user;
    $display = TRUE;

    $taxonomy = taxonomy_get_term_by_name($vocname, 'userpoints');
    $taxonomyid = reset($taxonomy)->tid;

    $points = userpoints_get_current_points($user->uid,$taxonomyid);
    $myvoc = taxonomy_vocabulary_machine_name_load('userpoints');
    $tree = taxonomy_get_tree($myvoc->vid);


    if(!_userpoints_user_exists($user->uid)){
        $display = FALSE;
    }

    foreach($tree as $term){

        if ($points < userpoints_get_current_points($user->uid,$term->tid)){
            $display = FALSE;
        }
    }

    return $display;
}

function persopal_check_show_default_homepage() {

    global $user;
    $display = TRUE;

    if(_userpoints_user_exists($user->uid)){
        $display = FALSE;
    }

    return $display;
}

/*
 * Implement hook_node_view
 */

function persopal_node_view ($node, $view_mode, $langcode) {

    global $user;
    $n = node_load($node->nid);
    if($n->type == 'holiday_review'){

        $n->content['field_score'][0]['average']['#description'] = "";

    }



}

function persopal_init() {




  // dpm(array('latitude' => $_SESSION['smart_ip']['location']['latitude'], 'longitude' => $_SESSION['smart_ip']['location']['longitude']));
    //dpm($_SESSION['smart_ip']);


}

/*
 * Implements hook_views_query_alter
 */

function persopal_views_query_alter(&$view, &$query) {


    if($view->name == 'jobs_vew' && $view->current_display == 'panel_pane_2') {

        if (isset($_SESSION['smart_ip']['location'])){
            $cords = array('latitude' => $_SESSION['smart_ip']['location']['latitude'], 'longitude' => $_SESSION['smart_ip']['location']['longitude']);
        }

       $lat = $cords['latitude'];
       $long = $cords['longitude'];

       



        $query->where[1]['conditions'][2]['field'] = "( 6371 * ACOS( COS( RADIANS($lat) ) * COS( RADIANS(field_data_field_geofield.field_geofield_lat) )
                                                        * COS( RADIANS(field_data_field_geofield.field_geofield_lon) - RADIANS($long) )
                                                        + SIN( RADIANS($lat) ) * SIN( RADIANS(field_data_field_geofield.field_geofield_lat) ) ) )       " .
                                                        " < 20";

    }

}

/**
 * Implements hook_views_pre_view()
 */

function persopal_views_pre_view(&$view) {

    if($view->name == 'jobs_vew' && $view->current_display == 'panel_pane_2') {

        $value = "Your location: ". $_SESSION['smart_ip']['location']['country'] ." " .$_SESSION['smart_ip']['location']['city'] ." " .$_SESSION['smart_ip']['location']['region'] ;
        $options = array(
            'id' => 'area',
            'table' => 'views',
            'field' => 'area',
            'empty' => FALSE,
            'content' => $value,
            'format' => 'filtered_html',
            'tokenize' => 0,
        );
        $view->display_handler->set_option('header', array('text' => $options));
    }
}

/**
 * Implements hook_page_alter
 */
function persopal_page_alter(&$page) {

    if(drupal_is_front_page()) {

        if (user_is_logged_in()) {
            global $user;
            drupal_set_title("Welcome, $user->name");
        }
        else if (user_is_anonymous()) {
            drupal_set_title("Welcome");
        }
    }
}

function persopal_visitor_action_subscribe($action){

    return array('my_visitor_action_subscriber');
}

function my_visitor_action_subscriber($name, $context) {

}

/**
 * Implements hook_token_info().
 */
function persopal_token_info() {
    $info = array();
    // Define a new token type.
    $info['types']['my_custom_tokens'] = array(
        'name' => t('My custom tokens'),
        'description' => t('A token type for my custom tokens.'),
    );
    // Define any new tokens.
    $info['tokens']['my_custom_tokens']['smart_ip_address'] = array(
        'name' => t('Smart IP Address'),
        'description' => t('A token to display the smart ip address.'),
    );
    return $info;
}

/**
 * Implements hook_tokens().
 */
function persopal_tokens($type, $tokens, array $data = array(), array $options = array()) {
    $replacements = array();

    if ($type == 'my_custom_tokens') {
        // Loop through the available tokens.
        foreach ($tokens as $name => $original) {
            // Find our custom tokens by name.
            switch ($name) {
                case 'smart_ip_address':
                    // Work out the value of our token.
                    $value = "Your location:". $_SESSION['smart_ip']['location']['country'] ." " .$_SESSION['smart_ip']['location']['city'] .$_SESSION['smart_ip']['location']['region'] ;
                    // Give our token it's value!
                    $replacements[$original] = $value;
                    break;
            }
        }
    }

    return $replacements;
}






